# Fase 3: Plan (Planejamento)

## Plano T√©cnico
**Implementa√ß√£o de Sistema de Autentica√ß√£o Completo (JWT)**

Combinar as ideias **4** (Sistema de autentica√ß√£o frontend) e **7** (Sistema de seguran√ßa backend) para criar uma solu√ß√£o completa de autentica√ß√£o e autoriza√ß√£o.

### üéØ **Objetivo**
Implementar um sistema de autentica√ß√£o robusto com JWT, prote√ß√£o de rotas e gerenciamento de sess√£o para transformar o skeleton em uma aplica√ß√£o pronta para produ√ß√£o.

## Checklist de Requisitos

### üîê **Backend (Micronaut)**
- [ ] Implementar JWT authentication com Micronaut Security
- [ ] Criar entidade User com roles (USER, ADMIN)
- [ ] Implementar UserRepository e UserService
- [ ] Criar AuthController com endpoints login/register/refresh
- [ ] Configurar CORS para endpoints de auth
- [ ] Implementar prote√ß√£o de endpoints com @Secured
- [ ] Criar middleware de valida√ß√£o JWT
- [ ] Hash de senhas com BCrypt

### ‚öõÔ∏è **Frontend (React)**
- [ ] Criar context/store para autentica√ß√£o
- [ ] Implementar formul√°rios de Login e Registro
- [ ] Criar componente ProtectedRoute
- [ ] Implementar interceptors Axios para JWT
- [ ] Adicionar logout e refresh token logic
- [ ] Criar layouts autenticado/n√£o autenticado
- [ ] Implementar persist√™ncia de sess√£o
- [ ] Feedback visual para estados de auth

### üîó **Integra√ß√£o**
- [ ] Proteger rotas do BookController
- [ ] Implementar refresh autom√°tico de tokens
- [ ] Tratamento de erros 401/403
- [ ] Redirecionamentos autom√°ticos

## Etapas e Cronograma

### **Fase 1: Backend Authentication (2-3h)**
1. **Configurar Micronaut Security**
   - Adicionar depend√™ncias JWT ao pom.xml
   - Configurar application.yml para JWT
2. **Criar estrutura de usu√°rios**
   - Entidade User com roles
   - UserRepository e UserService
   - Hash de senhas
3. **Implementar AuthController**
   - POST /auth/login
   - POST /auth/register
   - POST /auth/refresh
4. **Proteger endpoints existentes**
   - Aplicar @Secured nos BookController

### **Fase 2: Frontend Authentication (2-3h)**
5. **Setup de autentica√ß√£o**
   - Zustand store para auth state
   - Axios interceptors para JWT
6. **Componentes de UI**
   - LoginForm e RegisterForm
   - ProtectedRoute wrapper
7. **Integra√ß√£o com rotas**
   - Proteger /books route
   - Layouts condicionais

### **Fase 3: Integra√ß√£o e Testes (1-2h)**
8. **Integra√ß√£o completa**
   - Testar fluxo completo
   - Tratamento de erros
9. **Refinamentos**
   - UX melhorias
   - Documenta√ß√£o

## Crit√©rios de Aceita√ß√£o

### ‚úÖ **Funcionalidades Core**
- [ ] Usu√°rio pode se registrar com email/senha
- [ ] Usu√°rio pode fazer login e receber JWT
- [ ] JWT √© enviado automaticamente nas requisi√ß√µes
- [ ] Rotas protegidas redirecionam para login
- [ ] Logout limpa sess√£o e redireciona
- [ ] Token refresh autom√°tico funciona
- [ ] Diferentes n√≠veis de acesso (USER/ADMIN)

### ‚úÖ **Qualidade e Seguran√ßa**
- [ ] Senhas s√£o hasheadas (BCrypt)
- [ ] JWT tem expira√ß√£o adequada (15min + refresh 7d)
- [ ] Endpoints protegidos retornam 401 sem token
- [ ] CORS configurado corretamente
- [ ] Formul√°rios t√™m valida√ß√£o adequada
- [ ] Estados de loading/error funcionam

### ‚úÖ **UX/UI**
- [ ] Formul√°rios responsivos e acess√≠veis
- [ ] Feedback visual claro para estados
- [ ] Navega√ß√£o intuitiva entre auth/app
- [ ] Persist√™ncia de sess√£o entre reloads

## Observa√ß√µes

### üîß **Decis√µes T√©cnicas**
- **JWT Strategy:** Access token (15min) + Refresh token (7 dias)
- **Storage:** localStorage para tokens (considerando httpOnly cookies futuro)
- **Roles:** Enum simples USER/ADMIN (extens√≠vel)
- **Validation:** Bean Validation (backend) + Yup/Zod (frontend)

### ‚ö†Ô∏è **Riscos e Dependencies**
- **Risco:** Complexidade de refresh token logic
- **Mitiga√ß√£o:** Implementar interceptors robustos
- **Dependency:** Micronaut Security + JWT libs
- **Fallback:** Implementa√ß√£o manual se libs n√£o funcionarem

### üöÄ **Extens√µes Futuras**
- OAuth2 integration (Google, GitHub)
- Two-factor authentication
- Password reset flow
- User profile management
- Role-based UI components

---

*Preencha este arquivo conforme for detalhando o plano. N√£o avance para a execu√ß√£o sem aprova√ß√£o do usu√°rio.*
